package comandos;

import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Objects;
import java.util.Set;
import java.util.TreeSet;

public class OrdenacaoSet {

	public static void main(String[] args) {
		
		
		Set<Serie> series = new HashSet<>(){{
			add(new Serie(" jafe", " Romance", 60));
			add(new Serie(" O livro de Eli", " Apocaliptico", 60));
			add(new Serie(" Javao", " Programacao", 180));
		}};
		
		for (Serie serie : series) {
			System.out.println(serie.getNome()+", "+serie.getGenero()+", "+serie.getTempoEpisodio());
		}
		
		System.out.println();
		Set<Serie> series1 = new LinkedHashSet<>(){{
			add(new Serie(" jafe", " Romance", 60));
			add(new Serie(" O livro de Eli", " Apocaliptico", 60));
			add(new Serie(" Javao", " Programacao", 180));
		}};
		
		for (Serie serie : series1) {
			System.out.println(serie.getNome()+", "+serie.getGenero()+", "+serie.getTempoEpisodio());
		}

		System.out.println();
		Set<Serie> series2 = new TreeSet<Serie>(series1);
		
		for (Serie serie : series2) {
			System.out.println(serie.getNome()+", "+serie.getGenero()+", "+serie.getTempoEpisodio());
		}
	}

}

public class Serie {

	private String nome;
	private String genero;
	private Integer tempoEpisodio;
	
	public Serie(String nome, String genero, Integer tempoEpisodio) {
		super();
		this.nome = nome;
		this.genero = genero;
		this.tempoEpisodio = tempoEpisodio;
	}

	public String getNome() {
		return nome;
	}


	public String getGenero() {
		return genero;
	}

	public Integer getTempoEpisodio() {
		return tempoEpisodio;
	}


	@Override
	public String toString() {
		return "Serie [nome=" + nome + ", genero=" + genero + ", tempoEpisodio=" + tempoEpisodio + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(genero, nome, tempoEpisodio);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Serie other = (Serie) obj;
		return Objects.equals(genero, other.genero) && Objects.equals(nome, other.nome)
				&& Objects.equals(tempoEpisodio, other.tempoEpisodio);
	}
	
}
